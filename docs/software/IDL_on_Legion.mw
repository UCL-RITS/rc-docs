
[[Category:Software]][[Category:Applications]]
<table style="width:37%; background-color:#F9F9F9;float:right;margin-left:10px;">
<tr>
<td style="vertical-align:top;">
'''Quick Links'''
<ul style="column-count:2;-moz-column-count:2;-webkit-column-count:2">
<li>[[RC Systems | Platforms Overview]]</li>
<li>[[Additional Resource Requests| Request Additional Resources]]</li>
<li>[[:Category:User Guide | User Guide]]</li>
<li>[[Software| Software]]</li>
<li>[[Legion Metrics | Service Metrics]]</li>
<li>[[Account Services]]</li>
</ul>
</td>
</tr>
<tr>
<td style="vertical-align:top;">
__NOEDITSECTION__[[Contact and Support|Contact & Support]]<br />
For support for any of our services or for general advice and consultancy, email:<br />
[mailto:rc-support@ucl.ac.uk rc-support@ucl.ac.uk]

</td>
</tr>
</table>


[[Applications | Back to Applications]]<br /><br />
'''Current Version: 8.4.1'''<br />
IDL is a complete environment and language for the analysis and visualisation of scientific and other technical data. It can be used for everything from quick interactive data exploration to building complex applications. <br /><br />'''Useful Links:'''

* [http://www.exelisvis.com/docs/using_idl_home.html IDL documentayion on the EXELIS website]    <br /><br />
==Setup==
The following changes need to be made to the standard Legion modules before running this software:<br />

<code>module load idl/8.4.1</code><br /><br />Use IDL in either interactive mode or batch jobs.
[[Category:Pages with bash scripts]]
==Single threaded jobs - example submission script==

<div style="background-color:#F9F9F9;width=100%;padding:5px 10px 5px 10px;"><code>
 <nowiki>
#!/bin/bash -l

# Batch script to run a serial IDL job on Legion with the upgraded
# software stack under SGE. This version works with the modules
# environment upgraded in Oct 2015.

# 1. Force bash as the executing shell.
#$ -S /bin/bash

# 2. Request ten minutes of wallclock time (format hours:minutes:seconds).
#    Change this to suit your requirements.
#$ -l h_rt=0:10:0

# 3. Request 1 gigabyte of RAM. Change this to suit your requirements.
#$ -l mem=1G

# 4. Set the name of the job. You can change this if you wish.
#$ -N IDL_job_1

# 6. Set the working directory to somewhere in your scratch space.  This is
# a necessary step with the upgraded software stack as compute nodes cannot
# write to your $HOME.
#
# NOTE: this directory must exist.
#
# Replace "<your_UCL_id>" with your UCL user ID :)
#$ -wd /home/<your_UCL_id>/Scratch/IDL_output

# 7. Your work *must* be done in $TMPDIR
cd $TMPDIR

# 8. Load correct modules for IDL
module load idl/8.4.1
module list

# 9. Run IDL

# Copy IDL source files to $TMPDIR
cp /home/uczzxxx/Scratch/IDL/fib.pro $TMPDIR
cp /home/uczzxxx/Scratch/IDL/run1.pro $TMPDIR

idl -queue -e @run1.pro

# 10. Preferably, tar-up (archive) all output files onto the shared scratch area
#    this will include the mathOut file above.
tar zcvf $HOME/Scratch/IDL_output/files_from_job_$JOB_ID.tgz $TMPDIR

# Make sure you have given enough time for the copy to complete!

</nowiki>
</code>
</div>
This is available on:
<code>
 /shared/ucl/apps/IDL/share/run-idl.sh
</code>
[[#top | back to top]]

 


[[Category:Pages with bash scripts]]
==Multi-threaded jobs - example submission script==

<div style="background-color:#F9F9F9;width=100%;padding:5px 10px 5px 10px;"><code>
 <nowiki>
#!/bin/bash -l

# Batch script to run a multi-threaded IDL job on Legion with the upgraded
# software stack under SGE. This version works with the modules
# environment upgraded in Oct 2015.

# 1. Force bash as the executing shell.
#$ -S /bin/bash

# 2. Request ten minutes of wallclock time (format hours:minutes:seconds).
#    Change this to suit your requirements.
#$ -l h_rt=0:10:0

# 3. Request 1 gigabyte of RAM per core. Change this to suit your requirements.
#$ -l mem=1G

# 4. Select 6 threads (the most possible on the majority of Legion is 12).
#$ -pe smp 6

# 4. Set the name of the job. You can change this if you wish.
#$ -N IDL_job_MP1

# 6. Set the working directory to somewhere in your scratch space.  This is
# a necessary step with the upgraded software stack as compute nodes cannot
# write to your $HOME.
#
# NOTE: this directory must exist.
#
# Replace "<your_UCL_id>" with your UCL user ID :)
#$ -wd /home/<your_UCL_id>/Scratch/IDL_output

# 7. Your work *must* be done in $TMPDIR
cd $TMPDIR

# 8. Load correct modules for IDL and set IDL thread pool correctly
module load idl/8.1
module list

# 9. Do not change this!
export IDL_CPU_TPOOL_NTHREADS=$OMP_NUM_THREADS

# 10. Run IDL

# Copy IDL source files to $TMPDIR
cp /home/uczzxxx/Scratch/IDL/fib.pro $TMPDIR
cp /home/uczzxxx/Scratch/IDL/run2mp.pro $TMPDIR

idl -queue -e @run2mp.pro

# 11. Preferably, tar-up (archive) all output files onto the shared scratch area
#    this will include the mathOut file above.
tar zcvf $HOME/Scratch/IDL_output/files_from_job_$JOB_ID.tgz $TMPDIR

# Make sure you have given enough time for the copy to complete!

</nowiki>
</code>
</div>

[[#top | back to top]]






