
[[Category:Software]][[Category:Applications]]
<table style="width:37%; background-color:#F9F9F9;float:right;margin-left:10px;">
<tr>
<td style="vertical-align:top;">
'''Quick Links'''
<ul style="column-count:2;-moz-column-count:2;-webkit-column-count:2">
<li>[[RC Systems | Platforms Overview]]</li>
<li>[[Additional Resource Requests| Request Additional Resources]]</li>
<li>[[:Category:User Guide | User Guide]]</li>
<li>[[Software| Software]]</li>
<li>[[Legion Metrics | Service Metrics]]</li>
<li>[[Account Services]]</li>
</ul>
</td>
</tr>
<tr>
<td style="vertical-align:top;">
__NOEDITSECTION__[[Contact and Support|Contact & Support]]<br />
For support for any of our services or for general advice and consultancy, email:<br />
[mailto:rc-support@ucl.ac.uk rc-support@ucl.ac.uk]

</td>
</tr>
</table>


[[Applications | Back to Applications]]<br /><br />
'''Current Version: 7.3.0'''<br />
NONMEMÂ® is a nonlinear mixed effects modelling tool used in population pharmacokinetic / pharmacodynamic analysis. <br /><br />'''Useful Links:'''

* [https://nonmem.iconplc.com/ NONMEM website]    <br /><br />
==Setup==
<br />We have one build that uses gcc and ATLAS and an Intel build using MKL. Both use Intel MPI.

==Modules for Intel build==

<code>
 module load nonmem/7.3.0/intel-2015-update2
</code>

==Modules for GNU build==

<code>
 module unload compilers
 module unload mpi
 module load compilers/gnu/4.9.2
 module load atlas/3.10.2/gnu-4.9.2
 module load mpi/intel/2015/update3/gnu-4.9.2
 module load nonmem/7.3.0/gnu-4.9.2
</code>
==Example NONMEM Script==

<div style="background-color:#F9F9F9;width=100%;padding:5px 10px 5px 10px;">
<code>
 <nowiki>
#!/bin/bash -l

# Batch script to run a parallel NONMEM job on Legion with the upgraded
# software stack under SGE. This version works with the modules
# environment upgraded in Oct 2015.

# 1. Force bash as the executing shell.
#$ -S /bin/bash

# 2. Request ten minutes of wallclock time (format hours:minutes:seconds).
#    Change this to suit your requirements.
#$ -l h_rt=0:10:0

# 3. Request 1 gigabyte of RAM. Change this to suit your requirements.
#$ -l mem=1G

# 4. Set the name of the job. You can change this if you wish.
#$ -N NONMEM_par_job_1

# 5. Select the MPI parallel environment and 8 processes.
#$ -pe mpi 8

# 6. Set the working directory to somewhere in your scratch space.  This is
# a necessary step with the upgraded software stack as compute nodes cannot
# write to your $HOME.
#
# NOTE: this directory must exist.
#
# Replace "<your_UCL_id>" with your UCL user ID :)
#$ -wd /home/<your_UCL_id>/Scratch/nonmem

jobDir=example1_parallel_$JOB_ID
mkdir $jobDir

# 8. Copy control and datafiles to jobDir
cp /shared/ucl/apps/NONMEM/examples/foce_parallel.ctl $jobDir
cp /shared/ucl/apps/NONMEM/examples/example1b.csv $jobDir
cd $jobDir

# 9. Load NONMEM modules.
module load nonmem/7.3.0/intel-2015-update2

# 10. Create parafile for job using $TMPDIR/machines
parafile.sh $TMPDIR/machines > example1.pnm

#11. Run NONMEM
nmfe73 foce_parallel.ctl example1.res -parafile=example1.pnm -background -maxlim=1 > example1.log
</nowiki>
</code>
</div>



[[#top | back to top]]






