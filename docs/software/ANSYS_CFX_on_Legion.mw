
[[Category:Software]][[Category:Applications]]
<table style="width:37%; background-color:#F9F9F9;float:right;margin-left:10px;">
<tr>
<td style="vertical-align:top;">
'''Quick Links'''
<ul style="column-count:2;-moz-column-count:2;-webkit-column-count:2">
<li>[[RC Systems | Platforms Overview]]</li>
<li>[[Additional Resource Requests| Request Additional Resources]]</li>
<li>[[:Category:User Guide | User Guide]]</li>
<li>[[Software| Software]]</li>
<li>[[Legion Metrics | Service Metrics]]</li>
<li>[[Account Services]]</li>
</ul>
</td>
</tr>
<tr>
<td style="vertical-align:top;">
__NOEDITSECTION__[[Contact and Support|Contact & Support]]<br />
For support for any of our services or for general advice and consultancy, email:<br />
[mailto:rc-support@ucl.ac.uk rc-support@ucl.ac.uk]

</td>
</tr>
</table>


[[Applications | Back to Applications]]<br /><br />
'''Current Version: 16.1'''<br />
ANSYS/CFX and ANSYS/Fluent are commercial fluid dynamics packages. <br /><br />
==Setup==
The following changes need to be made to the standard modules before running this software: <br />

<code>module load ansys/16.1</code><br /><br />ANSYS/CFX and ANSYS/Fluent version 16.1 are available on Legion. 

The first time this module is loaded, users should run the shell script ''setup_cfx.sh'' to configure licensing and HP-MPI options on a login node:
<code>
 setup_cfx.sh 
</code>
Running this script is required regardless of whether you are running ANSYS/CFX or ANSYS/Fluent.

ANSYS/CFX and ANSYS/Fluent are intended to be run primarily within batch jobs however you may run short (less than 5 minutes execution time) interactive tests on the Login Nodes and longer (up to two hours) on the User Test Nodes. Interactive work can be done using the ANSYS interactive tools provided you have X-windows functionality enabled though your ssh connection. See our [https://wiki.rc.ucl.ac.uk/wiki/Category:Legion_User_Guide RC Systems User Guide] for more information about enabling X-windows functionality and the User Test nodes.

On Legion, there are a limited number of licenses (10 jobs, additional 64 cores) available for running CFX and Fluent jobs and in order to make sure that jobs only run if there are licenses available, it is necessary for users to request ANSYS licenses with their jobs, by adding "-ac app=cfx" to their job submission.

In addition, because CFX handles its own parallelisation, a number of options need to be passed in job scripts to make it run correctly.
[[Category:Pages with bash scripts]]
==Single node run==

<div style="background-color:#F9F9F9;width=100%;padding:5px 10px 5px 10px;"><code>
 <nowiki>
#!/bin/bash -l

# ANSYS 16.1: Batch script to run cfx5solve on the StaticMixer.def example 
# file, single node multi-threaded (4 threads),

# 1. Force bash as the executing shell.

#$ -S /bin/bash

# 2. Request 15 munutes of wallclock time (format hours:minutes:seconds).
#$ -l h_rt=0:15:0

# 3. Request 1 gigabyte of RAM.
#$ -l mem=1G

# 4. Set the name of the job.
#$ -N StaticMixer_thread_4

# 5. Select 4 threads.
#$ -pe smp 4

# 7. Request ANSYS licences 
#$ -ac app=cfx

# 8. Set the working directory to somewhere in your scratch space. In this
# case the subdirectory cfxtests-16.1
#$ -wd /home/<your userid>/Scratch/cfxtests-16.1

# 9. Load the ANSYS module to set up your environment

module load ansys/16.1

# 10. Copy the .def file into the working (current) directory

cp /home/<your userid>/cfx_examples/StaticMixer.def .

# 11. Run cfx5solve - Note: -max-elapsed-time needs to be set to the same
# time as defined by 2 above.

cfx5solve -max-elapsed-time "15 [min]" -def StaticMixer.def -par-local -partition $OMP_NUM_THREADS
</nowiki>
</code>
</div>

You will need to change the '-wd /home/<your_UCL_id>/Scratch/cfxtests-14.5.7'' SGE directive and may need to change the memory, wallclock time, number of threads and job name directives as well. Replace the ''.def'' file in 10 and 11 by your one and modify the ''-max-elapsed-time'' value if needed. The simplest form of qsub command can be used to submit the job eg:
<code>
 qsub run-StaticMixer-thr.sh
</code>
Output files will be saved in the job's working directory.

[[#top | Back to top]]



[[Category:Pages with bash scripts]]
==Multi node run==

<div style="background-color:#F9F9F9;width=100%;padding:5px 10px 5px 10px;"><code>
 <nowiki>
#!/bin/bash -l

# ANSYS 16.1: Batch script to run cfx5solve on the StaticMixer.def example 
# file, distributed parallel (36 cores),

# 1. Force bash as the executing shell.
#$ -S /bin/bash

# 2. Request one hour of wallclock time (format hours:minutes:seconds).
#$ -l h_rt=1:00:0

# 3. Request 2 gigabyte of RAM.
#$ -l mem=2G

# 4. Set the name of the job.
#$ -N StaticMixer_P_dist_36

# 5. Select the MPI parallel environment and 36 processors.
#$ -pe mpi 36

# 7. Request ANSYS licences 
#$ -ac app=cfx

# 8. Set the working directory to somewhere in your scratch space.  In this
# case the subdirectory cfxtests-16.1
#$ -wd /home/<your userid>/Scratch/cfxtests-16.1

# 9. Load the ANSYS module to set up your environment

module load ansys/16.1

# 10. Copy the .def file into the working (current) directory

cp /home/<your userid>/cfx_examples/StaticMixer.def .

# 11. SGE puts the machine file in $TMPDIR/machines. Use this to generate the 
# string CFX_NODES needed by cfx5solve

export CFX_NODES=`cfxnodes $TMPDIR/machines`

# 12. Force infinipath

export MPI_IC_ORDER=PSM

# 13. Run cfx5solve - Note: -max-elapsed-time needs to be set to the same
# time as defined by 2 above.

cfx5solve -max-elapsed-time "60 [min]" -def StaticMixer.def -start-method "Platform MPI Distributed Parallel" -par-dist $CFX_NODES
</nowiki>
</code>
</div>

Please copy if you wish and edit it to suit your jobs. You will need to change the ''-wd /home/<your_UCL_id>/Scratch/cfxtests-16.1'' SGE directive and may need to change the memory, wallclock time, number of MPI Processors (item 5) and job name directives as well. Replace the ''.def'' file in 10 and 13 by your one and modify the ''-max-elapsed-time'' value if needed. The simplest form of qsub command can be used to submit the job eg:
<code>
 qsub run-StaticMixer-par.sh
</code>
Output files will be saved in the job's working directory. 

[[#top | Back to top]]






