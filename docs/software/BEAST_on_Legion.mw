
[[Category:Software]][[Category:Applications]]
<table style="width:37%; background-color:#F9F9F9;float:right;margin-left:10px;">
<tr>
<td style="vertical-align:top;">
'''Quick Links'''
<ul style="column-count:2;-moz-column-count:2;-webkit-column-count:2">
<li>[[RC Systems | Platforms Overview]]</li>
<li>[[Additional Resource Requests| Request Additional Resources]]</li>
<li>[[:Category:User Guide | User Guide]]</li>
<li>[[Software| Software]]</li>
<li>[[Legion Metrics | Service Metrics]]</li>
<li>[[Account Services]]</li>
</ul>
</td>
</tr>
<tr>
<td style="vertical-align:top;">
__NOEDITSECTION__[[Contact and Support|Contact & Support]]<br />
For support for any of our services or for general advice and consultancy, email:<br />
[mailto:rc-support@ucl.ac.uk rc-support@ucl.ac.uk]

</td>
</tr>
</table>


[[Applications | Back to Applications]]<br /><br />
'''Current Version: 2.3.0'''<br />
BEAST is an application for Bayesian MCMC analysis of molecular sequences orientated towards rooted, time-measured phylogenies inferred using strict or relaxed molecular clock models. It can be used as a method of reconstructing phylogenies but is also a framework for testing evolutionary hypotheses without conditioning on a single tree topology.

BEAST is intended to be run primarily within batch jobs however you may run short (less than 5 minutes execution time) interactive tests on the Login Nodes and longer interactive tests on the User Test Nodes.

BEAST 2.3.0 is available. (FigTree and Tracer are now available as standalone modules). Also installed are the addons DISSECT, MODEL_SELECTION, and SNAPP. <br /><br />'''Useful Links:'''

* [http://beast.bio.ed.ac.uk/ BEAST homepage]    <br /><br />
==Setup==
The following changes need to be made to the standard modules before running this software: <br />

<code>module load java/1.8.0_45</code><br /><code>module load beast/2.3.0</code><br />
[[Category:Pages with bash scripts]]
==Example Job Submission Script==

<div style="background-color:#F9F9F9;width=100%;padding:5px 10px 5px 10px;"><code>
 <nowiki>
#!/bin/bash -l

# Batch script to run an OpenMP threaded BEAST job on Legion with the upgraded
# software stack under SGE. 

# This version works with the modules environment upgraded in Oct 2015.

# BEAST Version 2.3.0

# 1. Force bash as the executing shell.
#$ -S /bin/bash

# 2. Request 15 minutes of wallclock time (format hours:minutes:seconds).
#    Change this to suit your requirements.
#$ -l h_rt=0:15:0

# 3. Request 1 gigabyte of RAM per core. Change this to suit your requirements.
#$ -l mem=1G

# 4. Set the name of the job. You can change this if you wish.
#$ -N BEAST_job_1

# 5. Select 4 threads (the most possible on Legion is 12). NOTE: BEAST currently
# can only use 1 thread per partition.
#$ -pe smp 4

# 7. Set the working directory to somewhere in your scratch space.  This is
# a necessary step with the upgraded software stack as compute nodes cannot
# write to $HOME.
#
# NOTE: this directory must exist.
#
# Replace "<your_UCL_id>" with your UCL user ID :) 
#$ -wd /home/<your_UCL_id>/Scratch/BEAST

# 8. Your work *must* be done in $TMPDIR 
cd $TMPDIR

# 9. Load correct modules for BEAST
module load java/1.8.0_45
module load beast/2.3.0

# 10. Copy input XML file to TMPDIR and run BEAST 
cp $infile .
beast_infile=`basename $infile`
echo "Running BEAST with $OMP_NUM_THREADS threads ..."
beast -threads $OMP_NUM_THREADS $beast_infile

# 11. Preferably, tar-up (archive) all output files onto the shared scratch area
#    this will include the R_output file above.
tar zcvf $HOME/Scratch/BEAST/files_from_job_$JOB_ID.tar.gz $TMPDIR

# Make sure you have given enough time for the copy to complete!</nowiki>
</code>
</div>
This is available on:
<code>
 /shared/ucl/apps/BEAST/run-beast.sh
</code>
Please copy if you wish and edit it to suit your jobs. You will need to change the ''-wd /home/<your_UCL_id>/Scratch/BEAST'' grid engine directive. Submit the script using a qsub command like:
<code>
 qsub -v infile=`pwd`/gopher.xml run-beast.sh 
</code>
replacing gopher.xml with your BEAST XML file. Output will be written to $TMPDIR and so will need to be copied back to your ~/Scratch directory - step 11 in the runscript.






