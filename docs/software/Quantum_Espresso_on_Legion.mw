
[[Category:Software]][[Category:Applications]]
<table style="width:37%; background-color:#F9F9F9;float:right;margin-left:10px;">
<tr>
<td style="vertical-align:top;">
'''Quick Links'''
<ul style="column-count:2;-moz-column-count:2;-webkit-column-count:2">
<li>[[RC Systems | Platforms Overview]]</li>
<li>[[Additional Resource Requests| Request Additional Resources]]</li>
<li>[[:Category:User Guide | User Guide]]</li>
<li>[[Software| Software]]</li>
<li>[[Legion Metrics | Service Metrics]]</li>
<li>[[Account Services]]</li>
</ul>
</td>
</tr>
<tr>
<td style="vertical-align:top;">
__NOEDITSECTION__[[Contact and Support|Contact & Support]]<br />
For support for any of our services or for general advice and consultancy, email:<br />
[mailto:rc-support@ucl.ac.uk rc-support@ucl.ac.uk]

</td>
</tr>
</table>


[[Applications | Back to Applications]]<br /><br />
'''Current Version: 5.2.0'''<br />
Quantum Espresso is an integrated suite of Open-Source computer codes for electronic-structure calculations and materials modelling at the nanoscale. It is based on density-functional theory, plane waves, and pseudopotentials. <br /><br />'''Useful Links:'''

* [http://www.quantum-espresso.org/ Quantum Espresso website]    <br /><br />
==Setup==
If you're already acquainted with Quantum Espresso, running it on Legion should be relatively straightforward.

We have attempted to compile all the relevant components of Quantum Espresso, but if there's a particular component missing in our build that you need, let us know and we'll try to add it. (There are a lot of bits.) <br /> <br />The following changes need to be made to the standard modules before running this software: <br />

<code>module load xorg-utils</code><br /><code>module load quantum-espresso/5.2.0-impi/intel-2015-update2</code><br />
==Example Job Submission Script==
The script below demonstrates how to run <tt>pw.x</tt>, but should be adaptable to any of the other binaries.

This script assumes that you are somewhere in the Scratch area already -- it doesn't change directory, so if you attempt to run it from somewhere in the normal home directories, the job will go into the Eqw state with an error saying that the space isn't writable. Simply submit the script from the same directory as your Quantum Espresso input files, and change the input and output file names if necessary. You'll also need to change the project name to your project (and take out the <> brackets).
<div style="background-color:#F9F9F9;width=100%;padding:5px 10px 5px 10px;">
<code>
 <nowiki>
#!/bin/bash -l

# Script updated Oct 2015.

# 1. Force bash as the executing shell.
#$ -S /bin/bash

# 2. Request thirty minutes of wallclock time (format hours:minutes:seconds).
#$ -l h_rt=0:30:0

# 3. Request 1 gigabyte of RAM per core.
#$ -l mem=1G

# 4. Set the name of the job.
#$ -N QE

# 5. Select the MPI parallel environment and 16 cores.
#$ -pe mpi 16

# 7. Set the working directory to the current working directory when the job is submitted. 
#$ -cwd 

# Load the modules
module load xorg-utils
module load quantum-espresso/5.2.0-impi/intel-2015-update2

# Set the path here to where ever you keep your pseudopotentials.
export ESPRESSO_PSEUDO=$HOME/qe-psp

# Note - the -in argument here for input files avoids any problems with 
#   redirection to MPI applications that can arise.
# Gerun is a wrapper for mpirun.

gerun pw.x -in input.in >output.out
</nowiki>
</code>
</div>



[[#top | back to top]]






