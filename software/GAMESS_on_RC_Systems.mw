
[[Category:Software]][[Category:Applications]]
<table style="width:37%; background-color:#F9F9F9;float:right;margin-left:10px;">
<tr>
<td style="vertical-align:top;">
'''Quick Links'''
<ul style="column-count:2;-moz-column-count:2;-webkit-column-count:2">
<li>[[RC Systems | Platforms Overview]]</li>
<li>[[Additional Resource Requests| Request Additional Resources]]</li>
<li>[[:Category:User Guide | User Guide]]</li>
<li>[[Software| Software]]</li>
<li>[[Legion Metrics | Service Metrics]]</li>
<li>[[Account Services]]</li>
</ul>
</td>
</tr>
<tr>
<td style="vertical-align:top;">
__NOEDITSECTION__[[Contact and Support|Contact & Support]]<br />
For support for any of our services or for general advice and consultancy, email:<br />
[mailto:rc-support@ucl.ac.uk rc-support@ucl.ac.uk]

</td>
</tr>
</table>


[[Applications | Back to Applications]]<br /><br />
'''Current Version: 5Dec2014_R1'''<br />
The General Atomic and Molecular Electronic Structure System (GAMESS) is a general ab initio quantum chemistry package. <br /><br />'''Useful Links:'''

* [http://www.msg.ameslab.gov/gamess/gamess.html GAMESS home]    <br /><br />
==Setup==
The following changes need to be made to the standard modules before running this software: <br />

<code>module load gamess/5Dec2014_R1/intel-2015-update2</code><br /><br />The GAMESS module should be loaded once from a login node before submitting a job - this creates the <code>~/Scratch/gamess</code> directory for you which is used as USERSCR to write some scratch files during the job. If you don't want to keep these files and would prefer them to be written somewhere else like $TMPDIR instead, you can set the environment variable <code>$GAMESS_USERSCR</code> to that location in your jobscript after you have loaded the module.
==Example Job Submission Script==

<div style="background-color:#F9F9F9;width=100%;padding:5px 10px 5px 10px;">
<code>
 <nowiki>
#!/bin/bash -l

# Batch script to run a GAMESS job on RC Systems.

# 1. Force bash as the executing shell.
#$ -S /bin/bash

# 2. Request thirty minutes of wallclock time (format hours:minutes:seconds).
#$ -l h_rt=0:30:00

# 3. Request 1 gigabyte of RAM per core.
#$ -l mem=1G

# 4. Set the name of the job.
#$ -N gamess_test

# 5. Select the MPI parallel environment and 16 processors.
#$ -pe mpi 16

# 7. Set the working directory to somewhere in your scratch space. This 
# is a necessary step as compute nodes cannot write to $HOME. 
# This directory must exist.
#$ -wd /home/<your username>/Scratch/gamess

# 8. Now we need to set up and run our job. 
# MPI builds of GAMESS require you to pass in cores per node as well as the 
# total number of cores - you can get this using the ppn command. If you are 
# expecting a particular layout, you may wish to use #$ -ac allow=XYZ or UO to 
# limit the job to nodes with a given number of cores. $NSLOTS is the cores you 
# requested in the -pe statement.

module load gamess/5Dec2014_R1/intel-2015-update2
# You can use this to change where the USERSCR files go. By default, the module
# sets it to ~/Scratch/gamess.
export $GAMESS_USERSCR=$TMPDIR
rungms exam01.inp 00 $NSLOTS $(ppn)

</nowiki>
</code>
</div>



[[#top | back to top]]






