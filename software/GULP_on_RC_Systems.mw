
[[Category:Software]][[Category:Applications]]
<table style="width:37%; background-color:#F9F9F9;float:right;margin-left:10px;">
<tr>
<td style="vertical-align:top;">
'''Quick Links'''
<ul style="column-count:2;-moz-column-count:2;-webkit-column-count:2">
<li>[[RC Systems | Platforms Overview]]</li>
<li>[[Additional Resource Requests| Request Additional Resources]]</li>
<li>[[:Category:User Guide | User Guide]]</li>
<li>[[Software| Software]]</li>
<li>[[Legion Metrics | Service Metrics]]</li>
<li>[[Account Services]]</li>
</ul>
</td>
</tr>
<tr>
<td style="vertical-align:top;">
__NOEDITSECTION__[[Contact and Support|Contact & Support]]<br />
For support for any of our services or for general advice and consultancy, email:<br />
[mailto:rc-support@ucl.ac.uk rc-support@ucl.ac.uk]

</td>
</tr>
</table>


[[Applications | Back to Applications]]<br /><br />
'''Current Version: 3.4, 4.0.3.mpi, 4.2.mpi, 4.4.mpi'''<br />
GULP (General Utility Lattice Program) is a force-field program for performing a variety of tasks on a range of system types. It is capable of handling surfaces, interfaces, and polymers. 

CP2K installs are maintained by the Department of Chemistry. <br /><br />'''Useful Links:'''

* [https://nanochemistry.curtin.edu.au/gulp/ GULP website]    <br /><br />
==Setup==
The submission script generators for these versions are contained in the chemistry modules bundle, so you will need to load the module set that contains them before they are visible in the modules list. There is also a module for each version if you wish to use them that way.

Built with GCC, OpenMPI 1.8.4 and the Chemistry ATLAS install. <br />

<code>module load chemistry-modules</code><br /><code>module load submission-scripts</code><br /><br />The alias <code>submitters</code> will then list the submitters available.

You can then run <code>gulp.submit</code> which will ask you questions in order to create a suitable jobscript.

The "gulp.submit" submitter takes up to 5 arguments, and any omitted will be asked for interactively. The number of slots only needs to be specified if you are running in parallel.
<code>
 gulp.submit «input_file» «version» [«slots»] «time» «memory_per_core» «job_name»
</code>
So, for example:
<code>
 gulp.submit file.inp 4.4.mpi 8 2:00:00 1G gulptest
</code>
would request a job with the input file "file.inp" in the current working directory, running GULP 4.4.mpi, on 8 cores, with a maximum runtime of 2 hours, with 1 gigabyte of memory per core, and a job name of "gulptest".







